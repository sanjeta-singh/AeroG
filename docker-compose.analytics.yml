version: "3.9"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: analytics-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: analytics-kafka
    depends_on:
      - zookeeper
    ports:
      - "29092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD-SHELL", "timeout 10 bash -c '</dev/tcp/localhost/9092'"]
      interval: 5s
      timeout: 5s
      retries: 30
      start_period: 30s

  analytics-service:
    build:
      context: ./backend/analytics-service
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_KAFKA_CONSUMER_AUTO_OFFSET_RESET: earliest
      SPRING_DATA_MONGODB_URI: mongodb+srv://sanjeta:aerog%40123@aerog.global.mongocluster.cosmos.azure.com/?tls=true&authMechanism=SCRAM-SHA-256&retrywrites=false&maxIdleTimeMS=120000

  producer:
    build:
      context: ./scripts/data-generators
      dockerfile: Dockerfile-producer
    container_name: analytics-csv-producer
    depends_on:
      kafka:
        condition: service_healthy
      analytics-service:
        condition: service_started
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      TOPIC: aerog-data
    command: ["python3", "send_flight_data.py"]